use("db_campus_alquiler");
db.createCollection("sucursal", {
    capped: true,
    size: 1900,
    max: 5,
    validator: {
    $jsonSchema: {
        bsonType: "object",
        additionalProperties: false,
        required: [ "ID_Sucursal", "Nombre", "Direccion", "Telefono"],
        properties: {
            _id:{
                bsonType: 'objectId',
            },
            ID_Sucursal: {
                bsonType: "int",
                minimum: 0,
                maximum: 20,
                description: "El campo branchID debe ser un número y estar comprendido entre 0 y 20",
            },
            Nombre: {
                bsonType: "string",
                pattern: "^[A-Za-z\\s]+$",
                description: "Debe informar el campo name y este debe ser un string",
            },
            Direccion: {
                bsonType: "string",
                pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]+$",
                description: "Debe informar el campo address y este debe ser un string",
            },
            Telefono: {
                bsonType: "string",
                pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]+$",
                description: "Debe informar el campo phoneNumber y este debe ser un string",
            },
        },
    },
    },
});

db.createCollection("sucursal_automovil", {
    capped: true,
    size: 1900,
    max: 5,
    validator: {
    $jsonSchema: {
        bsonType: "object",
        additionalProperties: false,
        required: ["ID_Sucursal_id", "ID_Automovil_id", "Cantidad_Disponible"],
        properties: {
            _id:{
                bsonType: 'objectId',
            },
            ID_Sucursal_id: {
                bsonType: "int",
                minimum: 0,
                maximum: 20,
                description: "El campo ID_Sucursal_id debe ser un número y estar comprendido entre 0 y 20"
            },
            ID_Automovil_id: {
                bsonType: "int",
                minimum: 0,
                maximum: 20,
                description: "El campo ID_Automovil_id debe ser un número y estar comprendido entre 0 y 20"
            },
            Cantidad_Disponible: {
                bsonType: "int",
                minimum: 0,
                description: "El campo Cantidad_Disponible debe ser un número"
            }
        },
    },
    },
});
db.createCollection("automovil");
db.createCollection("alquiler");
db.createCollection("reserva");
db.createCollection("cliente");
db.createCollection("registro_devolucion");
db.createCollection("registro_entrega");
db.createCollection("empleado");

use("db_campus_alquiler");
db.sucursal.insertOne({
    "ID_Sucursal": 1,
    "Nombre": "Zona Franca",
    "Direccion": "CLL 56 #13-36",
    "Telefono": 322122112
});

use("db_campus_alquiler");
db.sucursal_automovil.insertOne({
    "ID_Sucursal": 1,
    "ID_Automovil": 1,
    "Cantidad_Disponible": 32
});

use("db_campus_alquiler");
db.automovil.insertOne({

    "ID_Automovil": 1,
    "Marca": "Zona Franca",
    "Modelo": "3xxd",
    "Anio": 2023,
    "Tipo": "Familiar",
    "Capacidad": 6,
    "Precio_Diario": 32243455543
});

use("db_campus_alquiler");
db.alquiler.insertOne({
    "ID_Alquiler": 1,
    "ID_Cliente": 1,
    "ID_Automovil_id": 1,
    "Fecha_Inicio": "2023-07-31",
    "Fecha_Fin": "2023-08-30",
    "Costo_Total": 19997273665.654,
    "Estado": "Pendiente"
});

use("db_campus_alquiler");
db.reserva.insertOne({
    "ID_Reserva": 1,
    "ID_Cliente": 1,
    "ID_Automovil_id": 1,
    "Fecha_Reserva": "2023-07-28",
    "Fecha_Inicio": "2023-07-31",
    "Fecha_Fin": "2023-08-31",
    "Estado": "Usando"
});

use("db_campus_alquiler");
db.cliente.insertOne({
    "ID_Cliente": 1,
    "Nombre": "Ernesto",
    "Apellido": "Perez",
    "DNI": "Y1234567Z",
    "Direccion": "CLL 56 #13-36",
    "Telefono": 3224543241,
    "Email": "ernezpe@gmail.com"
});

use("db_campus_alquiler");
db.registro_devolucion.insertOne({
    "ID_Registro": 1,
    "ID_Alquiler": 1,
    "ID_Empleado": 1,
    "Fecha_Devolucion": "31/08/2023",
    "Combustible_Devuelto": 34.3,
    "Kilometraje_Devuelto": 124,
    "Monto_Adicional": 38908776
});

use("db_campus_alquiler");
db.registro_entrega.insertOne({
    "ID_Registro": 1,
    "ID_Alquiler": 1,
    "ID_Empleado": 1,
    "Fecha_Entrega": "31/0/2023",
    "Combustible_Entregado": 89.3,
    "Kilometraje_Entregado": 524,
});

use("db_campus_alquiler");
db.empleado.insertOne({
    "ID_Empleado": 1,
    "Nombre": "Miguel",
    "Apellido": "Castro",
    "DNI": "cedula",
    "Direccion": "cll 34 #45-10",
    "Telefono": 1234567890,
    "Cargo": "Vendedor"
});

// -------------INSERT MANY--------------------

use("db_campus_alquiler");
db.sucursal.insertMany([
    {
        "ID_Sucursal": 2,
        "Nombre": "Sucursal Principal",
        "Direccion": "Av. Libertadores #245",
        "Telefono": 311998877
    },
    {
        "ID_Sucursal": 3,
        "Nombre": "Sucursal Norte",
        "Direccion": "Calle 72 #40-15",
        "Telefono": 300112233
    },
    {
        "ID_Sucursal": 4,
        "Nombre": "Sucursal Centro",
        "Direccion": "Plaza Mayor #10",
        "Telefono": 311223344
    },
    {
        "ID_Sucursal": 5,
        "Nombre": "Sucursal Occidente",
        "Direccion": "Carrera 80 #25-30",
        "Telefono": 300445566
    },
    {
        "ID_Sucursal": 6,
        "Nombre": "Sucursal Sur",
        "Direccion": "Calle 45 #12-50",
        "Telefono": 322334455
    }
]);

use("db_campus_alquiler");
db.automovil.insertMany([
    {
        "ID_Automovil": 2,
        "Marca": "Toyota",
        "Modelo": "Corolla",
        "Anio": 2022,
        "Tipo": "Sedán",
        "Capacidad": 5,
        "Precio_Diario": 150000.00
    },
    {
        "ID_Automovil": 3,
        "Marca": "Ford",
        "Modelo": "Explorer",
        "Anio": 2021,
        "Tipo": "SUV",
        "Capacidad": 7,
        "Precio_Diario": 180000.00
    },
    {
        "ID_Automovil": 4,
        "Marca": "Honda",
        "Modelo": "Civic",
        "Anio": 2023,
        "Tipo": "Coupé",
        "Capacidad": 4,
        "Precio_Diario": 135000.00
    },
    {
        "ID_Automovil": 5,
        "Marca": "Chevrolet",
        "Modelo": "Suburban",
        "Anio": 2022,
        "Tipo": "SUV",
        "Capacidad": 8,
        "Precio_Diario": 200000.00
    },
    {
        "ID_Automovil": 6,
        "Marca": "Nissan",
        "Modelo": "Sentra",
        "Anio": 2023,
        "Tipo": "Sedán",
        "Capacidad": 5,
        "Precio_Diario": 155000.00
    }
]);

use("db_campus_alquiler");
db.sucursal_automovil.insertMany([
    {
        "ID_Sucursal": 2,
        "ID_Automovil": 2,
        "Cantidad_Disponible": 25
    },
    {
        "ID_Sucursal": 1,
        "ID_Automovil": 3,
        "Cantidad_Disponible": 18
    },
    {
        "ID_Sucursal": 3,
        "ID_Automovil": 4,
        "Cantidad_Disponible": 10
    },
    {
        "ID_Sucursal": 2,
        "ID_Automovil": 5,
        "Cantidad_Disponible": 20
    },
    {
        "ID_Sucursal": 1,
        "ID_Automovil": 6,
        "Cantidad_Disponible": 15
    },
    {
        "ID_Sucursal": 4,
        "ID_Automovil": 6,
        "Cantidad_Disponible": 22
    },
    {
        "ID_Sucursal": 4,
        "ID_Automovil": 5,
        "Cantidad_Disponible": 12
    },
    {
        "ID_Sucursal": 5,
        "ID_Automovil": 1,
        "Cantidad_Disponible": 32
    },
    {
        "ID_Sucursal": 6,
        "ID_Automovil": 2,
        "Cantidad_Disponible": 15
    },
    {
        "ID_Sucursal": 5,
        "ID_Automovil": 4,
        "Cantidad_Disponible": 32
    },
    {
        "ID_Sucursal": 6,
        "ID_Automovil": 5,
        "Cantidad_Disponible": 11
    },
]);

use("db_campus_alquiler");
db.alquiler.insertMany([
    {
        "ID_Alquiler": 2,
        "ID_Cliente": 5,
        "ID_Automovil_id": 4,
        "Fecha_Inicio": "2023-08-17",
        "Fecha_Fin": "2023-08-25",
        "Costo_Total": 7500000.00,
        "Estado": "Disponible"
    },
    {
        "ID_Alquiler": 3,
        "ID_Cliente": 2,
        "ID_Automovil_id": 8,
        "Fecha_Inicio": "2023-09-01",
        "Fecha_Fin": "2023-09-10",
        "Costo_Total": 12000000.00,
        "Estado": "Aprobado"
    },
    {
        "ID_Alquiler": 4,
        "ID_Cliente": 3,
        "ID_Automovil_id": 6,
        "Fecha_Inicio": "2023-10-12",
        "Fecha_Fin": "2023-10-12",
        "Costo_Total": 5000000.00,
        "Estado": "Disponible"
    },
    {
        "ID_Alquiler": 5,
        "ID_Cliente": 6,
        "ID_Automovil_id": 14,
        "Fecha_Inicio": "2023-07-05",
        "Fecha_Fin": "2023-08-05",
        "Costo_Total": 15000000.00,
        "Estado": "Aprobado"
    },
    {
        "ID_Alquiler": 6,
        "ID_Cliente": 4,
        "ID_Automovil_id": 9,
        "Fecha_Inicio": "2023-09-15",
        "Fecha_Fin": "2023-10-15",
        "Costo_Total": 8500000.00,
        "Estado": "Pendiente"
    }

]);

use("db_campus_alquiler");
db.reserva.insertMany([
    {
        "ID_Reserva": 2,
        "ID_Cliente": 1,
        "ID_Automovil_id": 4,
        "Fecha_Reserva": "2023-07-02",
        "Fecha_Inicio": "2023-07-05",
        "Fecha_Fin": "2023-08-15",
        "Estado": "Pendiente"
    },
    {
        "ID_Reserva": 3,
        "ID_Cliente": 2,
        "ID_Automovil_id": 5,
        "Fecha_Reserva": "2023-08-07",
        "Fecha_Inicio": "2023-08-10",
        "Fecha_Fin": "2023-08-20",
        "Estado": "Aprobado"
    },
    {
        "ID_Reserva": 4,
        "ID_Cliente": 5,
        "ID_Automovil_id": 2,
        "Fecha_Reserva": "2023-08-03",
        "Fecha_Inicio": "2023-08-12",
        "Fecha_Fin": "2023-08-22",
        "Estado": "Finalizado"
    },
    {
        "ID_Reserva": 5,
        "ID_Cliente": 4,
        "ID_Automovil_id": 6,
        "Fecha_Reserva": "2023-08-04",
        "Fecha_Inicio": "2023-08-08",
        "Fecha_Fin": "2023-08-18",
        "Estado": "Cancelado"
    },
    {
        "ID_Reserva": 6,
        "ID_Cliente": 3,
        "ID_Automovil_id": 1,
        "Fecha_Reserva": "2023-08-06",
        "Fecha_Inicio": "2023-08-18",
        "Fecha_Fin": "2023-08-28",
        "Estado": "Usando"
    }
]);

use("db_campus_alquiler");
db.cliente.insertMany([
    {
        "ID_Cliente": 2,
        "Nombre": "María",
        "Apellido": "González",
        "DNI": "H1234567I",
        "Direccion": "Av. Libertadores #245",
        "Telefono": 3119988772,
        "Email": "mariagonzalez@example.com"
    },
    {
        "ID_Cliente": 3,
        "Nombre": "Carlos",
        "Apellido": "Ramírez",
        "DNI": "J1234567K",
        "Direccion": "Calle 72 #40-15",
        "Telefono": 3001122333,
        "Email": "carlosramirez@example.com"
    },
    {
        "ID_Cliente": 4,
        "Nombre": "Laura",
        "Apellido": "López",
        "DNI": "M1234567N",
        "Direccion": "Plaza Mayor #10",
        "Telefono": 3112233444,
        "Email": "lauralopez@example.com"
    },
    {
        "ID_Cliente": 5,
        "Nombre": "José",
        "Apellido": "Martínez",
        "DNI": "O1234567P",
        "Direccion": "Carrera 80 #25-30",
        "Telefono": 3004455665,
        "Email": "josemartinez@example.com"
    },
    {
        "ID_Cliente": 6,
        "Nombre": "Ana",
        "Apellido": "Sánchez",
        "DNI": "Q1234567R",
        "Direccion": "Calle 45 #12-50",
        "Telefono": 3223344556,
        "Email": "anasanchez@example.com"
    }
]);

use("db_campus_alquiler");
db.registro_devolucion.insertMany([
    {
        "ID_Registro": 2,
        "ID_Alquiler": 2,
        "ID_Empleado": 2,
        "Fecha_Devolucion": "25/08/2023",
        "Combustible_Devuelto": 45.2,
        "Kilometraje_Devuelto": 176,
        "Monto_Adicional": 24000000
    },
    {
        "ID_Registro": 3,
        "ID_Alquiler": 3,
        "ID_Empleado": 1,
        "Fecha_Devolucion": "18/08/2023",
        "Combustible_Devuelto": 12.7,
        "Kilometraje_Devuelto": 89,
        "Monto_Adicional": 7600000
    },
    {
        "ID_Registro": 4,
        "ID_Alquiler": 4,
        "ID_Empleado": 3,
        "Fecha_Devolucion": "03/09/2023",
        "Combustible_Devuelto": 55.8,
        "Kilometraje_Devuelto": 210,
        "Monto_Adicional": 18000000
    },
    {
        "ID_Registro": 5,
        "ID_Alquiler": 5,
        "ID_Empleado": 2,
        "Fecha_Devolucion": "20/08/2023",
        "Combustible_Devuelto": 67.5,
        "Kilometraje_Devuelto": 300,
        "Monto_Adicional": 5000000
    },
    {
        "ID_Registro": 6,
        "ID_Alquiler": 6,
        "ID_Empleado": 3,
        "Fecha_Devolucion": "12/09/2023",
        "Combustible_Devuelto": 22.1,
        "Kilometraje_Devuelto": 140,
        "Monto_Adicional": 32000000
    }
]);

use("db_campus_alquiler");
db.registro_entrega.insertMany([
    {
        "ID_Registro": 2,
        "ID_Alquiler": 2,
        "ID_Empleado": 2,
        "Fecha_Entrega": "15/08/2023",
        "Combustible_Entregado": 65.8,
        "Kilometraje_Entregado": 412
    },
    {
        "ID_Registro": 3,
        "ID_Alquiler": 3,
        "ID_Empleado": 3,
        "Fecha_Entrega": "22/08/2023",
        "Combustible_Entregado": 74.2,
        "Kilometraje_Entregado": 600
    },
    {
        "ID_Registro": 4,
        "ID_Alquiler": 4,
        "ID_Empleado": 2,
        "Fecha_Entrega": "10/08/2023",
        "Combustible_Entregado": 80.0,
        "Kilometraje_Entregado": 480
    },
    {
        "ID_Registro": 5,
        "ID_Alquiler": 5,
        "ID_Empleado": 1,
        "Fecha_Entrega": "28/08/2023",
        "Combustible_Entregado": 70.5,
        "Kilometraje_Entregado": 550
    },
    {
        "ID_Registro": 6,
        "ID_Alquiler": 6,
        "ID_Empleado": 3,
        "Fecha_Entrega": "03/09/2023",
        "Combustible_Entregado": 52.1,
        "Kilometraje_Entregado": 360
    }
]);

use("db_campus_alquiler");
db.empleado.insertMany([
    {
        "ID_Empleado": 2,
        "Nombre": "Ana",
        "Apellido": "López",
        "DNI": "cedula2",
        "Direccion": "Av. Libertadores #245",
        "Telefono": 9876543210,
        "Cargo": "Asistente"
    },
    {
        "ID_Empleado": 3,
        "Nombre": "Carlos",
        "Apellido": "Ramírez",
        "DNI": "cedula3",
        "Direccion": "Calle 72 #40-15",
        "Telefono": 4567890123,
        "Cargo": "Supervisor"
    },
    {
        "ID_Empleado": 4,
        "Nombre": "Laura",
        "Apellido": "González",
        "DNI": "cedula4",
        "Direccion": "Plaza Mayor #10",
        "Telefono": 9012345678,
        "Cargo": "Gerente"
    },
    {
        "ID_Empleado": 5,
        "Nombre": "José",
        "Apellido": "Martínez",
        "DNI": "cedula5",
        "Direccion": "Carrera 80 #25-30",
        "Telefono": 6789012345,
        "Cargo": "Vendedor"
    },
    {
        "ID_Empleado": 6,
        "Nombre": "María",
        "Apellido": "Sánchez",
        "DNI": "cedula6",
        "Direccion": "Calle 45 #12-50",
        "Telefono": 3456789012,
        "Cargo": "Asistente"
    }
]);


/* ---------------------------- METHODS --------------------- */

/* UPDATE */
use("db_campus_alquiler");
db.alquiler.updateMany(
    { Estado: "Aprobado" },
    { $set: { Estado: "Activo" } }
);
/* -------------------------------------------- QUERIES -------------------------------------- */

// 1. Show all the clients register in the database
use("db_campus_alquiler");
db.cliente.find({},{Nombre:1, Apellido:1, _id:0});

// 2. Get all the vehicles available for rent
use("db_campus_alquiler");
db.alquiler.find({ Estado: { $eq: "Disponible" } });

// 3. List all active rentals along with the details of the related customers
use("db_campus_alquiler");
db.cliente.aggregate([
    {
        $lookup: {
            from: "alquiler",
            localField: "ID_Cliente",
            foreignField: "ID_Cliente",
            as: "data_Alquiler"
        }
    },
    {
        $project: {
          "data_Alquiler._id":0,
          "data_Alquiler.ID_Cliente":0,
          "data_Alquiler.ID_Automovil_id":0,
          "data_Alquiler.Costo_Total":0,
        }
    },
    {
        $match: {
            "data_Alquiler.Estado": { $eq: "Activo" }
        }
    },
    {
        $unwind: "$data_Alquiler"
    },
    {
        $group: {
            _id: "$_id",
            ID_Cliente:{$first:"$ID_Cliente"},
            Nombre:{$first:"$Nombre"},
            Apellido:{$first:"$Apellido"},
            DNI:{$first:"$DNI"},
            Direccion:{$first:"$Direccion"},
            Telefono:{$first:"$Telefono"},
            Email:{$first:"$Email"},
            data_Alquiler:{$first:"$data_Alquiler"}
        }
    }
]);

// 4. Show all pending reservations with customer data and the reserved car.
use("db_campus_alquiler");
db.reserva.aggregate([
    {
      $lookup: {
        from: "cliente",
        localField: "ID_Cliente",
        foreignField: "ID_Cliente",
        as: "data_Cliente"
      }
    },
    {
        $project: {
          "data_Cliente._id":0,
          "data_Cliente.ID_Cliente":0,
          "data_Cliente.DNI":0
        }
    },
    {
        $match: {
            Estado: { $eq: "Pendiente" }
        }
    },
    {
      $unwind: "$data_Cliente"
    }
  ]);
  
//5. Get the rental details with the specific ID_Alquiler.
use("db_campus_alquiler");
db.alquiler.find({ID_Alquiler: 6});

//6. List the employees with the position of "Vendedor"
use("db_campus_alquiler");
db.empleado.aggregate([
    {
        $match:{
            Cargo: {$eq: "Vendedor"}
        }
    },
    {
        $project: {
          "_id": 0,
          "ID_Empleado":1,
          "Nombre":1,
          "Apellido":1,
          "Cargo":1
        }
    }
]);

//7. Show the total number of cars available in each branch.
use("db_campus_alquiler");
db.sucursal.aggregate([
    {
        $lookup: {
          from: "sucursal_automovil",
          localField: "ID_Sucursal",
          foreignField: "ID_Sucursal",
          as: "data_Sucursal"
        }
    },
    {
        $unwind: "$data_Sucursal"
    },
    {
        $group: {
          _id: "$data_Sucursal.ID_Sucursal",
          total_Automoviles: {$sum: "$data_Sucursal.Cantidad_Disponible"}
        }
    },
    {
        $project: {
          "_id": 0,
          "ID_Sucursal": "$_id",
          "Nombre": 1,
          "Total_Automoviles": "$total_Automoviles"
        }
    },
    { $sort: { ID_Sucursal: 1 } }
]);

//8. Get the total cost of a specific "alquiler".
use("db_campus_alquiler");
db.alquiler.find({ID_Alquiler: 3},{_id:0, ID_Alquiler:1, Costo_Total:1});

//9.List the clients with the specific "DNI".
use("db_campus_alquiler");
db.cliente.find({DNI: "M1234567N"},{_id:0, ID_Cliente:1, Nombre:1, Apellido:1, DNI:1, Telefono:1});

//10. Show all cars with a capacity greater than 5 people.
use("db_campus_alquiler");
db.automovil.find({ Capacidad: { $gte: 5 } },{_id:0,});

//11. Get the details of the rental that has a start date of '2023-07-05'
use("db_campus_alquiler");
db.alquiler.find({Fecha_Inicio:'2023-07-05'},{_id:0});

//12. List pending reservations made by a client specific
use("db_campus_alquiler");
db.reserva.find({ID_Cliente: 1, Estado: "Pendiente"});

//13. Show the employees with title of "Gerente" o "Asistente". 
use("db_campus_alquiler");
db.empleado.find({ Cargo:{ $in: ["Gerente", "Asistente"]}});

//14. Get the data of the clients who made at least one rent (alquiler).
use("db_campus_alquiler");
db.cliente.aggregate([
    {
        $lookup: {
            from: "alquiler",
            localField: "ID_Cliente",
            foreignField: "ID_Cliente",
            as: "data_Alquiler"
        }
    },
    {
        $project: {
            "_id" : 0,
            "Direccion" : 0,
            "Telefono":0,
            "Email":0,
            "data_Alquiler._id":0,
            "data_Alquiler.ID_Cliente":0,
            "data_Alquiler.Costo_Total":0,
        }
    },
    {
        $match: {
            data_Alquiler: { $ne: [] }
        }
    }
]);

//15. List all cars sorted by brand and model.
use("db_campus_alquiler");
db.automovil.aggregate([
    {
        $project:{
            "_id": 0,
        }
    },
    {
        $sort:{
            "Marca": 1,
            "Modelo": 1
        }
    }
]);

//16. Show the total number of cars at each branch along with their address.
use("db_campus_alquiler");
db.sucursal.aggregate([
    {
        $lookup: {
          from: "sucursal_automovil",
          localField: "ID_Sucursal",
          foreignField: "ID_Sucursal",
          as: "data_Automoviles"
        }
    },
    {
        $addFields: {
          "total_Automoviles": { $sum: "$data_Automoviles.Cantidad_Disponible" }
        }
    },
    {
        $project: {
          "_id": 0,
          "Telefono": 0,
          "data_Automoviles._id": 0,
          "data_Automoviles.ID_Sucursal": 0,
        }
    }
]);

//17. Get the total number of rentals recorded in the database.
use("db_campus_alquiler");
db.alquiler.countDocuments();

//18. Show all the cars with a capacity of 5 people that are currently available.
use("db_campus_alquiler");
db.automovil.aggregate([
    {
        $lookup: {
          from: "alquiler",
          localField: "ID_Automovil",
          foreignField: "ID_Automovil_id",
          as: "data_Alquiler"
        }
    },
    {
        $match: {
          "data_Alquiler.Estado":"Disponible",
          "Capacidad":{$gte: 5}
        }
    },
    {
        $project: {
          "_id":0,
          "data_Alquiler._id": 0,
          "data_Alquiler.ID_Automovil_id": 0
        }
    }
]);

//19.List the rentals with a start date between '2023-07-05' and '2023-07-10'.
use("db_campus_alquiler");
db.alquiler.aggregate([
    {
        $match: {
            Fecha_Inicio: {
                $gte: "2023-07-05",
                $lte: "2023-07-10"
            }
        }
    },
    { $project: {"_id":0} },
    { $sort: {Fecha_Inicio: 1}}
]);
